<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Download  <%= data.name %> torrent</title>
    <meta name="description" content="Download grátis via torrent do jogo <%= data.name %>, baixe na playtorrent, game para <%= data.platform %> do genero <% data.class.forEach(element => { %><%= element %>, <% }) %>" >
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <link rel="stylesheet" href="/styles.css">
    <link rel="icon" href="/favicon.ico" type="image/x-icon" />
    

</head>
<body class="bg-gray-900 text-white">
    <%- include('./components/navbar.ejs') %>

    <main>
        <h2>ESTAMOS EM REFORMA....</h2>
        <section class="p-4  flex items-center justify-around m-auto max-w-screen-xl mt-10">
            <a href="javascript:void(0);" onclick="history.back();">Voltar</a><br><br>
            <h1 class="text-5xl text-center">Game: <%= data.name %></h1>
        </section>

        <section class="p-4  flex items-center justify-around m-auto max-w-screen-xl">
            <img src="/cover/<%= data.img %>" alt="" class="w-52 h-72 rounded-md object-cover">
            
            <iframe
                title="<%= 'Trailer video do jogo: ' + data.name %>"
                src="<%= data.video %>"
                frameborder="0"
                class="bg-gray-600 h-72 object-cover aspect-video rounded-md"
                allow="autoplay; encrypted-media"
            ></iframe>
        
        </section>
    </main>

    <article>
        <section class="p-4  m-auto max-w-screen-xl">
            <p><%= data.description %></p>
        </section>

        <section class="p-4  m-auto max-w-screen-xl">
            <p><%= data.information %></p>
        </section>
        <% if (data.class && data.class.length !== 0) { %>
            <section class="p-4 m-auto max-w-screen-xl flex space-x-3">
                <% data.class.forEach(element => { %>
                    <p><%= element %></p>
                <% }) %>
            </section>
        <% } %>
    </article>


    
    
    <section class="p-4  m-auto max-w-screen-xl">
        <!-- tipo: jogo <p><%= data.type %></p> <br> --> 
        <p>Plataforma: <%= data.platform %></p>
    </section>
    
    <% if (data.download) { %>
        <section class="p-4  m-auto max-w-screen-xl">
            <p>DOWNLOADS: <%= data.download %></p>
        </section>
    <% } %>
    
    <section class="p-4  m-auto max-w-screen-xl flex justify-center items-center space-x-4">

        <a href="<%= data.link %>" target="_blank" class=" px-4 py-2 bg-blue-500 hover:bg-blue-700 hover:shadow-lg duration-300 text-white w-72 text-center rounded-md">DOWNLOAD</a>

        <button onclick="copyToClipboard('<%= data.link %>', this), downloadCont()" class=" px-4 py-2 rounded-md bg-gray-500 hover:bg-gray-600 duration-300 hover:shadow-md  flex gap-2">
            <span class="material-symbols-outlined">content_copy</span>
            MAGNET LINK
        </button>
   
    </section>

    <%- include('./components/keywords.ejs', {name: data.name}) %>

    <%- include('./components/footer.ejs') %>


</body>
</html>

<script>

    function copyToClipboard(text, btn) {
        const textarea = document.createElement('textarea');
        textarea.value = text;
        document.body.appendChild(textarea);
        textarea.select();
        document.execCommand('copy');
        document.body.removeChild(textarea);

        btn.style.backgroundColor = 'rgb(34 197 94 / var(--tw-bg-opacity))'
        btn.style.color = 'black'
        setTimeout(() => {
            btn.style.backgroundColor = 'rgb(107 114 128 / var(--tw-bg-opacity))'
            btn.style.color = 'white'
        }, 1000);
    }

    const gameId = '<%= data.id %>';
    const url = `https://www.playtorrent.com.br/viewCont/${gameId}`


    fetch(url, {
        method: 'PATCH',
        headers: {
            'Content-Type': 'application/json',
        },
    })
    .then((response) => {
        if (!response.ok) {
            throw new Error(`Erro ao contar visualização: ${response.status}`);
        }
        return response.json(); // Converte a resposta para JSON
    })
    .then((data) => {
        console.log('Visualização contada com sucesso!');
        console.log(`Visualizações: ${data.views}`);
    })
    .catch((error) => {
        console.error('Erro ao contar visualização:', error);
        // Trate o erro de acordo com suas necessidades
    });



    async function  downloadCont(){
        const gameId = '<%= data.id %>';
        const url = `https://www.playtorrent.com.br/downloadCont/${gameId}`

        fetch(url, {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json',
            },
        })

        .then((response) => {
            if (!response.ok) {
                throw new Error(`Erro ao contar download: ${response.status}`);
            }
            return response.json(); // Converte a resposta para JSON
        })
        .then((data) => {
            console.log('Download contado com sucesso!');
            console.log(`Download: ${data.views}`);
        })
        .catch((error) => {
            console.error('Erro ao contar Download:', error);
            // Trate o erro de acordo com suas necessidades
        });
    }
</script>
